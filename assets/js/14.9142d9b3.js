(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{413:function(s,e,n){"use strict";n.r(e);var a=n(2),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"title"}),n("p",[s._v("node  session  cookies")])]),s._v(" "),n("h2",{attrs:{id:"express-中使用session"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#express-中使用session"}},[s._v("#")]),s._v(" express 中使用session")]),s._v(" "),n("hr"),s._v(" "),n("h3",{attrs:{id:"导入session"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#导入session"}},[s._v("#")]),s._v(" 导入session")]),s._v(" "),n("blockquote",[n("p",[s._v("npm i express-session")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 导入 express 模块\nconst express = require('express')\n// 创建 express 的服务器实例\nconst app = express()\n\n// TODO_01：请配置 Session 中间件\nconst session = require('express-session')\napp.use(\n  session({\n    secret: 'itheima', //任意字符串\n    resave: false,\n    saveUninitialized: true,\n  })\n)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("blockquote",[n("p",[s._v("当express-session配置完成后  可以通过req.session 来访问和使用session")])]),s._v(" "),n("hr"),s._v(" "),n("h3",{attrs:{id:"判断session"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#判断session"}},[s._v("#")]),s._v(" 判断session")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("app.get('/api/username', (req, res) => {\n        if (req.session.islogin) {\n            return res.send({ static: 1, msg: \"fail\" })\n        }\n        res.send({\n            static: 0,\n            msg: 'success',\n            username: req.session.username\n        })\n    })\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"退出session"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#退出session"}},[s._v("#")]),s._v(" 退出session")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("app.use('/api/out', (res, req) => {\n    req.session.destroy() //清空该session\n    res.send({\n        static: 0,\n        msg: '退出登录'\n    })\n})\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h2",{attrs:{id:"jwt-认证机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jwt-认证机制"}},[s._v("#")]),s._v(" JWT 认证机制")]),s._v(" "),n("blockquote",[n("p",[s._v("三部分组成   Header(头部)  Payload(有效荷载)  Signature (签名)"),n("br"),s._v("\nAuthorization : Bearer < token >\n安装的包："),n("br"),s._v("\nnpm i jsonwebtoken express-jwt "),n("br"),s._v("  jsonwebtoken 生成JWT字符串  express-jwt 将JWT还原成json对象")])]),s._v(" "),n("h3",{attrs:{id:"导入jwt相关的包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#导入jwt相关的包"}},[s._v("#")]),s._v(" 导入JWT相关的包")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// TODO_01：安装并导入 JWT 相关的两个包，分别是 jsonwebtoken 和 express-jwt\nconst jwt = require('jsonwebtoken')\nconst expressJWT = require('express-jwt')\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("hr"),s._v(" "),n("h3",{attrs:{id:"使用jwt-加密"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用jwt-加密"}},[s._v("#")]),s._v(" 使用JWT 加密")]),s._v(" "),n("blockquote",[n("p",[s._v("调用jsonwebtoken 包提供的sign()方法，将用户的信息加密成jwt字符串")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" // 登录成功\n  // TODO_03：在登录成功之后，调用 jwt.sign() 方法生成 JWT 字符串。并通过 token 属性发送给客户端\n  // 参数1：用户的信息对象\n  // 参数2：加密的秘钥\n  // 参数3：配置对象，可以配置当前 token 的有效期\n  // 记住：千万不要把密码加密到 token 字符中\n  const tokenStr = jwt.sign({ username: userinfo.username }, secretKey, { expiresIn: '30s' })\n  res.send({\n    status: 200,\n    message: '登录成功！',\n    token: tokenStr, // 要发送给客户端的 token 字符串\n  })\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h3",{attrs:{id:"配置哪些接口不需要配置token-unless方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置哪些接口不需要配置token-unless方法"}},[s._v("#")]),s._v(" 配置哪些接口不需要配置token  unless方法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 注意：只要配置成功了 express-jwt 这个中间件，就可以把解析出来的用户信息，挂载到 req.user 属性上\napp.use(expressJWT({ secret: secretKey }).unless({ path: [/^\\/api\\//] }))\n// 指定unless({ path: [/^\\/api\\//] })  api开头的接口不需要调用token加密\n//配置成功后  会自动将解析出来的信息 挂载到req.user上\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"将jwt加密字符串还原成json对象-express-jwt-👆"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#将jwt加密字符串还原成json对象-express-jwt-👆"}},[s._v("#")]),s._v(" 将JWT加密字符串还原成JSON对象  express-jwt  👆")]),s._v(" "),n("blockquote",[n("p",[s._v("请求头中的Authorization字段  用express-jwt中间件还原   "),n("br"),s._v("\nAPI调用时候  在请求头添加 Authorization    value：   Bearer+token 才行")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 这是一个有权限的 API 接口\napp.get('/admin/getinfo', function(req, res) {\n    // TODO_05：使用 req.user 获取用户信息，并使用 data 属性将用户信息发送给客户端\n    console.log(req.user)// 成功有效的 才能有req.user值\n    res.send({\n        status: 200,\n        message: '获取用户信息成功！',\n        data: req.user, // 要发送给客户端的用户信息\n    })\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"判断全局无效token-错误中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#判断全局无效token-错误中间件"}},[s._v("#")]),s._v(" 判断全局无效token 错误中间件")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// TODO_06：使用全局错误处理中间件，捕获解析 JWT 失败后产生的错误\napp.use((err, req, res, next) => {\n    // 这次错误是由 token 解析失败导致的\n    if (err.name === 'UnauthorizedError') {\n        return res.send({\n            status: 401,\n            message: '无效的token',\n        })\n    }\n    res.send({\n        status: 500,\n        message: '未知的错误',\n    })\n})\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h3",{attrs:{id:"对密码进行加密处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对密码进行加密处理"}},[s._v("#")]),s._v(" 对密码进行加密处理")]),s._v(" "),n("p",[s._v("在当前项目中，使用"),n("code",[s._v("bcryptjs")]),s._v("对用户密码进行加密")]),s._v(" "),n("ol",[n("li",[s._v("加密后的密码，无法被逆向破解")]),s._v(" "),n("li",[s._v("同一明文密码，多次加密得到的结果不一样")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\x3c!-- 安装： --\x3e\nnpm i bcryptjs@2.4.3\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ol",[n("li",[s._v("在注册用户的处理函数中，确认用户名可用之后，调用 bcrypt.hashSync(明文密码, 随机盐的长度) 方法，对用户的密码进行加密处理：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 对用户的密码,进行 bcrype 加密，返回值是加密之后的密码字符串\nuserinfo.password = bcrypt.hashSync(userinfo.password, 10)\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])])}),[],!1,null,null,null);e.default=t.exports}}]);