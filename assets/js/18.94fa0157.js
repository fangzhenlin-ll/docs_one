(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{419:function(s,e,n){"use strict";n.r(e);var a=n(2),r=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"title"}),n("p",[s._v("node 学习的第三天   express学习")])]),s._v(" "),n("h2",{attrs:{id:"express"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#express"}},[s._v("#")]),s._v(" Express")]),s._v(" "),n("blockquote",[n("p",[s._v("Express  也算一种包  基于 内置的http模块  封装出来提高开发效率的包"),n("br"),s._v("添加express包  npm i express@4.17.1  版本号可以选择最新 npm i express 即可")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 1. 导入 express\nconst express = require('express')\n// 2. 创建 web 服务器\nconst app = express()\n\n// 4. 监听客户端的 GET 和 POST 请求，并向客户端响应具体的内容\napp.get('/user', (req, res) => {\n  // 调用 express 提供的 res.send() 方法，向客户端响应一个 JSON 对象\n  res.send({ name: 'zs', age: 20, gender: '男' })\n})\napp.post('/user', (req, res) => {\n  // 调用 express 提供的 res.send() 方法，向客户端响应一个 文本字符串\n  res.send('请求成功')\n})\napp.get('/', (req, res) => {\n  // 通过 req.query 可以获取到客户端发送过来的 查询参数\n  // 注意：默认情况下，req.query 是一个空对象\n  console.log(req.query)\n  res.send(req.query)\n})\n// 注意：这里的 :id 是一个动态的参数\napp.get('/user/:ids/:username', (req, res) => {\n  // req.params 是动态匹配到的 URL 参数，默认也是一个空对象\n  console.log(req.params)\n  res.send(req.params)\n})\n\n// 3. 启动 web 服务器\napp.listen(80, () => {\n  console.log('express server running at http://127.0.0.1')\n})\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br")])]),n("h3",{attrs:{id:"获取url中携带的查询参数-req-query"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取url中携带的查询参数-req-query"}},[s._v("#")]),s._v(" 获取URL中携带的查询参数  req.query")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("app.get('/', (req, res) => {\n    console.log(req.query);\n    res.send(req.query)\n})\n//访问 http://127.0.0.1/?age=18  输出{ age: '18' }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("blockquote",[n("h3",{attrs:{id:"获取url中的动态参数-req-params"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#获取url中的动态参数-req-params"}},[s._v("#")]),s._v(" 获取URL中的动态参数 req.params")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("app.get('/user/:id', (req, res) => {\n    //req.params  动态匹配到id这个动态变量\n    console.log(req.params);\n    res.send(req.params)\n})\n//访问 http://127.0.0.1/user/123  输出{ id: 123 }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"托管静态资源"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#托管静态资源"}},[s._v("#")]),s._v(" 托管静态资源")]),s._v(" "),n("blockquote",[n("p",[s._v("express 提供了一个函数   express.static() 创建静态资源服务器"),n("br"),s._v("app.use(express.static('public))//将public文件夹得所有文件向外共享")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const express = require('express')\nconst app = express();\n//调用express.static()  快速对外共享资源\napp.use(express.static('./clock'))\napp.use(express.static('./files'))\n//访问127.0.0.1 时候就默认等于访问clock得文件夹 默认就打开index.HTML文件\n//可以同时添加多个需要共享的文件 根据express.static()的顺序进行查找！比如同样有index文件\n//则先访问clock的index文件\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("app.use('/abc',express.static('./files'))\n//加上前缀后  当访问路径加上/abc 则访问files文件\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"nodemon的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nodemon的使用"}},[s._v("#")]),s._v(" nodemon的使用")]),s._v(" "),n("blockquote",[n("p",[s._v("监听项目是否变动  自动重启项目")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("npm install -g nodemon\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h2",{attrs:{id:"express-路由"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#express-路由"}},[s._v("#")]),s._v(" Express 路由")]),s._v(" "),n("hr"),s._v(" "),n("h3",{attrs:{id:"什么是express路由"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是express路由"}},[s._v("#")]),s._v(" 什么是express路由")]),s._v(" "),n("blockquote",[n("p",[s._v("app.请求的方式get、post等（'路由的名称 比如 /user', ()=>{请求执行的函数}）")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("app.get('/', (req, res) => {\n    res.send('hello  word！')\n})\n\napp.post('/', (req, res) => {\n    res.send('post res.send')\n})\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h3",{attrs:{id:"路由的模块化-express-router"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#路由的模块化-express-router"}},[s._v("#")]),s._v(" 路由的模块化  express.Router ()")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//创建 03.router文件\n// 这是路由模块\n// 1. 导入 express\nconst express = require('express')\n// 2. 创建路由对象\nconst router = express.Router()\n\n// 3. 挂载具体的路由\nrouter.get('/user/list', (req, res) => {\n  res.send('Get user list.')\n})\nrouter.post('/user/add', (req, res) => {\n  res.send('Add new user.')\n})\n\n// 4. 向外导出路由对象\nmodule.exports = router\n\n//在index.js引用\nconst express = require('express')\nconst aaa = require('./03.router')\nconst app = express();\napp.use(aaa);\n//app.use('/lin', aaa);  可以添加前缀 进行区分\napp.listen(80, () => {\n    console.log('http://127.0.0.1');\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("h3",{attrs:{id:"express中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#express中间件"}},[s._v("#")]),s._v(" express中间件")]),s._v(" "),n("blockquote",[n("ol",[n("li",[s._v("中间件的概率： 本质上就是一个function函数 只是多了个next参数   可以调用next()函数"),n("br")]),s._v(" "),n("li",[s._v("中间件之间公用同一份req和res")])])]),s._v(" "),n("blockquote",[n("ol",[n("li",[s._v("要在路由之前创建中间件"),n("br")]),s._v(" "),n("li",[s._v("客户端发过来的请求，可以连续调用多个中间件"),n("br")]),s._v(" "),n("li",[s._v("要加 next()函数 才能执行下去"),n("br")]),s._v(" "),n("li",[s._v("调用完 next()  就不要加其他逻辑代码了！"),n("br")]),s._v(" "),n("li",[s._v("联系调用多个中间件时候，中间件跟路由之间是共享 req res的")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("app.use((req, res, next) => {  //定义了全局生效的中间件  有请求到达服务器 必定会先经过该中间件\n  console.log('这是最简单的中间件函数')\n  next()\n})\n\napp.get('/', (req, res) => {\n  console.log('调用了 / 这个路由')\n  res.send('Home page.')\n})\n//当调用 127.0.0.1/的时候会得到Home page.   并输出这是最简单的中间件函数，调用了 / 这个路由\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h4",{attrs:{id:"共享中间件定义挂在的自定义属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#共享中间件定义挂在的自定义属性"}},[s._v("#")]),s._v(" 共享中间件定义挂在的自定义属性")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 这是定义全局中间件的简化形式\napp.use((req, res, next) => {\n  // 获取到请求到达服务器的时间\n  const time = Date.now()\n  // 为 req 对象，挂载自定义属性，从而把时间共享给后面的所有路由\n  req.startTime = time\n  next()\n})\n\napp.get('/', (req, res) => {\n  res.send('Home page.' + req.startTime)\n})\napp.get('/user', (req, res) => {\n  res.send('User page.' + req.startTime)\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h4",{attrs:{id:"局部生效的中间件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#局部生效的中间件"}},[s._v("#")]),s._v(" 局部生效的中间件")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 1. 定义中间件函数\nconst mw1 = (req, res, next) => {\n  console.log('调用了局部生效的中间件')\n  next()\n}\nconst mw2 = (req, res, next) => {\n  console.log('调用了第二个局部生效的中间件')\n  next()\n}\n// 2. 创建路由\napp.get('/', mw1, (req, res) => {\n  res.send('Home page.')\n})\n// 2. 创建路由\napp.get('/', [mw1, mw2], (req, res) => {\n  res.send('Home page.')\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("h4",{attrs:{id:"中间件的分类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#中间件的分类"}},[s._v("#")]),s._v(" 中间件的分类")]),s._v(" "),n("blockquote",[n("ol",[n("li",[s._v("应用级别的中间件  通过绑定到app实力上的中间件    app.use() app.get() app.post()!"),n("br")]),s._v(" "),n("li",[s._v("路由级别的中间件   绑定到express.Router()实例上  其实跟应用级别中间件没啥区别"),n("br")]),s._v(" "),n("li",[s._v("错误级别的中间件   专门捕获项目中发生的异常错误  错误级别的中间件有4个参数 （err,req,res,next）!(必须在最后面定义 这样就能输出err.message  捕获错误原因)"),n("br")]),s._v(" "),n("li",[s._v("express内置的中间件 "),n("br"),s._v("  express.static 静态托管  "),n("br"),s._v(" express.json 解析json格式数据 app.use(express.json) "),n("br"),s._v(" express.urlencodeed 解析URL-encoded格式请求数据 app.use(express.urlencoded({extenden: false}))")]),s._v(" "),n("li",[s._v("第三方中间件   npm i body-parser "),n("br")]),s._v(" "),n("li",[s._v("自定义中间件  当拿完全部数据后 会自动触发  req.end事件")])])]),s._v(" "),n("h5",{attrs:{id:"服务器发送json数据过来"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务器发送json数据过来"}},[s._v("#")]),s._v(" 服务器发送json数据过来")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 注意：除了错误级别的中间件，其他的中间件，必须在路由之前进行配置\n// 通过 express.json() 这个中间件，解析表单中的 JSON 格式的数据\napp.use(express.json())\n// 通过 express.urlencoded() 这个中间件，来解析 表单中的 url-encoded 格式的数据\napp.use(express.urlencoded({ extended: false }))\n\napp.post('/user', (req, res) => {\n  // 在服务器，可以使用 req.body 这个属性，来接收客户端发送过来的请求体数据\n  // 默认情况下，如果不配置解析表单数据的中间件，则 req.body 默认等于 undefined\n  console.log(req.body) // 输出 { name: '张三', age: 18 }\n  res.send('ok')\n})\n\napp.post('/book', (req, res) => {\n  // 在服务器端，可以通过 req,body 来获取 JSON 格式的表单数据和 url-encoded 格式的数据\n  console.log(req.body)\n  res.send('ok')\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("h5",{attrs:{id:"使用querystring-模块解析请求数据-提供了parse"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用querystring-模块解析请求数据-提供了parse"}},[s._v("#")]),s._v(" 使用querystring 模块解析请求数据 提供了parse()")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const qs = require('querystring')\napp.use((req, res, next) => {\n    let str = ''\n    req.on('data', (chunk) => {\n        str += `${chunk}`\n    })\n\n    req.on('end', () => {\n        const body = qs.parse(str)\n        console.log(body); //输出[Object: null prototype] { bookname: '三国\\n', zuozhe: '林' }\n    })\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("blockquote",[n("p",[s._v("将req.body挂载供下游的中间件或路由访问")])]),s._v(" "),n("h2",{attrs:{id:"api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[s._v("#")]),s._v(" API")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const express = require('express')\n\nconst app = express();\nconst router = express.Router()\n\napp.use('/api', router);\n//get接口\nrouter.get('/get', (req, res) => {\n    const query = req.query\n\n    res.send({\n        status: 0, //表示处理成功  1表示处理失败\n        msg: 'GET请求成功',\n        data: query\n    })\n})\n\n//post 接口\napp.use(express.json())//解析json数据格式  加这个 req.body才有值\napp.use(express.urlencoded({ extended: false }))//解析urlencoded数据格式  加这个 req.body才有值\nrouter.post('/post', (req, res) => {\n    const body = req.body\n    res.send({\n        status: 0, //表示处理成功  1表示处理失败\n        msg: 'post请求成功',\n        data: body\n    })\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("h3",{attrs:{id:"api跨域解决-cors"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#api跨域解决-cors"}},[s._v("#")]),s._v(" API跨域解决 CORS")]),s._v(" "),n("blockquote",[n("p",[s._v("npm i cors   "),n("br"),s._v("   const cors =require('cors')  "),n("br"),s._v("  要在路由之前配置")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const cors = require('cors')\napp.use(cors())//一定要写在路由前面  也要在router之前\n\n//分析\n\nres.seHeader('Access-Control-Allow-Origin','http://text2.huajiangxing')//指定什么地址跨域请求\n//cors 仅支持 get post head请求   需要添加 put delete等则需要：\nres.setHeader('Access-Control-Allow-Methods','*')//*表示通配符  否则就将写 'GET,POST,DELETE'\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])])])}),[],!1,null,null,null);e.default=r.exports}}]);