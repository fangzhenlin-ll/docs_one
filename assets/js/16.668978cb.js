(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{417:function(s,n,e){"use strict";e.r(n);var a=e(2),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"}),e("p",[s._v("node实践 登录注册等")])]),s._v(" "),e("h2",{attrs:{id:"优化-res-send"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优化-res-send"}},[s._v("#")]),s._v(" 优化 res.send()")]),s._v(" "),e("blockquote",[e("p",[s._v("经常需要写错误的return    if(err) return err    可以创建个中间件搭建res.cc()函数")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//路由之前封装res.cc()\napp.use((req, res, next) => {\n    //status 默认值为1 表示失败的清空\n    //err 的值可能是一个错误对象 也可能是错误的字符串\n    res.cc = function(err, status = 1) {\n        res.send({\n            status,\n            message: err instanceof Error ? err.message : err,//返回的是Error则输出err.message 否则输出 err\n        })\n    }\n    next();\n})\n\n\n//调用\n res.cc('注册成功!', 0)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("hr"),s._v(" "),e("h2",{attrs:{id:"优化表单数据验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优化表单数据验证"}},[s._v("#")]),s._v(" 优化表单数据验证")]),s._v(" "),e("ol",[e("li",[s._v("安装 @hapi/joi 包，为表单中携带的每个数据项，定义验证规则：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    npm install @hapi/joi@17.1.0\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("安装 @escook/express-joi 中间件，来实现自动对表单数据进行验证的功能：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    npm i @escook/express-joi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ol",{attrs:{start:"3"}},[e("li",[s._v("使用规则")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const joi = require('@hapi/joi')\n\n/**\n* string() 值必须是字符串\n* alphanum() 值只能是包含 a-zA-Z0-9 的字符串\n* min(length) 最小长度\n* max(length) 最大长度\n* required() 值是必填项，不能为 undefined\n* pattern(正则表达式) 值必须符合正则表达式的规则\n*/\n\n// 用户名的验证规则\nconst username = joi.string().alphanum().min(1).max(10).required()\n// 密码的验证规则\nconst password = joi\n .string()\n .pattern(/^[\\S]{6,12}$/)\n .required()\n\n// 注册和登录表单的验证规则对象\nexports.reg_login_schema = {\n // 表示需要对 req.body 中的数据进行验证\n body: {\n   username,\n   password,\n },\n}\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br")])]),e("h3",{attrs:{id:"判断登录-通过对比加密后的密码对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#判断登录-通过对比加密后的密码对比"}},[s._v("#")]),s._v(" 判断登录 通过对比加密后的密码对比")]),s._v(" "),e("blockquote",[e("p",[s._v("核心实现思路：调用 bcrypt.compareSync(用户提交的密码, 数据库中的密码) 方法比较密码是否一致")])]),s._v(" "),e("blockquote",[e("p",[s._v("返回值是布尔值（true 一致、false 不一致）")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("exports.login = (req, res) => {\n   // 接收表单的数据 \n\n   const userinfo = req.body\n   const sql = 'select * from ev_users where username=?'\n\n   db.query(sql, userinfo.username, (err, data) => {\n       if (err) return res.cc(err)\n\n       if (data.length !== 1) {\n           return res.cc('登录失败')\n       }\n       //判断密码是否正确\n       const panduan = bcrypt.compareSync(userinfo.password, data[0].password) \n        //密码转换正确后返回布尔值  true or false\n       if (panduan) {\n           res.send('login OK')\n       } else {\n           res.send('登录失败')\n       }\n\n   })\n\n   // res.send('login OK')\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("h2",{attrs:{id:"生成-jwt-的-token-字符串"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成-jwt-的-token-字符串"}},[s._v("#")]),s._v(" 生成 JWT 的 Token 字符串")]),s._v(" "),e("ol",[e("li",[s._v("通过 ES6 的高级语法，快速剔除 密码 和 头像 的值：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 剔除完毕之后，user 中只保留了用户的 id, username, nickname, email 这四个属性的值\nconst user = { ...results[0], password: '', user_pic: '' }\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("运行如下的命令，安装生成 Token 字符串的包：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("npm i jsonwebtoken@8.5.1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ol",{attrs:{start:"3"}},[e("li",[s._v("模块的头部区域，导入 jsonwebtoken 包：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 用这个包来生成 Token 字符串\nconst jwt = require('jsonwebtoken')\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ol",{attrs:{start:"4"}},[e("li",[s._v("向外共享 加密 和 还原 Token 的 jwtSecretKey 字符串：")])]),s._v(" "),e("div",{staticClass:"language-module.exports = { line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("  jwtSecretKey: 'itheima No1. ^_^',\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ol",{attrs:{start:"5"}},[e("li",[s._v("将用户信息对象加密成 Token 字符串：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 导入配置文件\nconst config = require('../config')\n\n// 生成 Token 字符串\nconst tokenStr = jwt.sign(user, config.jwtSecretKey, {\n  expiresIn: '10h', // token 有效期为 10 个小时\n})\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("ol",{attrs:{start:"6"}},[e("li",[s._v("将生成的 Token 字符串响应给客户端：")])]),s._v(" "),e("div",{staticClass:"language-res.send({ line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("  status: 0,\n  message: '登录成功！',\n  // 为了方便客户端使用 Token，在服务器端直接拼接上 Bearer 的前缀\n  token: 'Bearer ' + tokenStr,\n})\n\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h2",{attrs:{id:"解析token-判断"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解析token-判断"}},[s._v("#")]),s._v(" 解析token 判断")]),s._v(" "),e("ol",[e("li",[s._v("运行如下的命令，安装解析 Token 的中间件：")])]),s._v(" "),e("div",{staticClass:"language-npm i express-jwt@5.3.3 line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code")]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"})]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("在 app.js 中注册路由之前，配置解析 Token 的中间件：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 导入配置文件\nconst config = require('./config')\n\n// 解析 token 的中间件\nconst expressJWT = require('express-jwt')\n\n// 使用 .unless({ path: [/^\\/api\\//] }) 指定哪些接口不需要进行 Token 的身份认证\napp.use(expressJWT({ secret: config.jwtSecretKey }).unless({ path: [/^\\/api\\//] }))\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("ol",{attrs:{start:"3"}},[e("li",[s._v("在 app.js 中的 错误级别中间件 里面，捕获并处理 Token 认证失败后的错误：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 错误中间件\napp.use(function (err, req, res, next) {\n  // 省略其它代码...\n\n  // 捕获身份认证失败的错误\n  if (err.name === 'UnauthorizedError') return res.cc('身份认证失败！')\n\n  // 未知错误...\n})\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);