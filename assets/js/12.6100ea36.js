(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{415:function(s,e,t){"use strict";t.r(e);var a=t(2),r=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"遍历数组-查重去重自己不想要的数组-filter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#遍历数组-查重去重自己不想要的数组-filter"}},[s._v("#")]),s._v(" 遍历数组 查重去重自己不想要的数组 filter()")]),s._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[s._v("var xx=[1,2,3,4,5,6,7,8]\nvar xx1=xx.filter(item =>item >=3)\nconsole.log(xx1);//[3, 4, 5, 6, 7, 8]\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h2",{attrs:{id:"字符串-charat-0-接收索引对应的字符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串-charat-0-接收索引对应的字符"}},[s._v("#")]),s._v(" 字符串 charAt(0) 接收索引对应的字符")]),s._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[s._v("var xx='hello'\nconsole.log(xx.charAt(0));// h\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"字符转大写-touppercase"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符转大写-touppercase"}},[s._v("#")]),s._v(" 字符转大写 toUpperCase()")]),s._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[s._v("var xx='hello'\nconsole.log(xx.charAt(0).toUpperCase());// H\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"字符串的-slice-1-方法-将字符串从-1-开始截取"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串的-slice-1-方法-将字符串从-1-开始截取"}},[s._v("#")]),s._v(" 字符串的 slice(1)方法 将字符串从 1 开始截取")]),s._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[s._v("var xx='hello'\nconsole.log(xx.slice(1));//ello\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("hr"),s._v(" "),t("h2",{attrs:{id:"queryselector"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#queryselector"}},[s._v("#")]),s._v(" querySelector()")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[s._v("今天在看 js 的时候发现里面的代码基本上都是用 querySelector()和 querySelectorAll()来获取元素，就有点疑惑为什么不用 getElementById(),可能也是因为自己没用过那两个，所以并不清楚原因所在。")]),s._v(" "),t("p",[s._v("参考手册上写 querySelector() 方法返回文档中匹配指定 CSS 选择器的一个元素，并且其语法 document.querySelector(CSS selectors)接收的参数，可以指定一个或多个匹配元素的 CSS 选择器，可以使用它们的 id, 类, 类型, 属性, 属性值等来选取元素，对于多个选择器，使用逗号隔开，返回一个匹配的元素。")]),s._v(" "),t("p",[s._v("而且既然都可以实现元素的获取，而且都可以通过 id、类等等来获取，为什么我们时常用的都是 getElementById()，getElementsByClassName()而非那两个？")])]),t("h2",{attrs:{id:"什么是-promise"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-promise"}},[s._v("#")]),s._v(" 什么是 Promise?")]),s._v(" "),t("ul",[t("li",[s._v("ES6 异步编程的一种解决方案，比传统的方案（回调函数和事件）更加的合理和强大")]),s._v(" "),t("li",[s._v("好处 异步操作以同步操作的流程表达出来，避免了层层嵌套的回调函数")]),s._v(" "),t("li",[s._v("promise 可以解决异步的问题，本身不能说 promise 是异步的")])]),s._v(" "),t("p",[s._v("Promise 特点")]),s._v(" "),t("ul",[t("li",[s._v("对象的状态不受外界影响。Promise 对象代表一个异步操作，有三种状态：pending（进行中）、resolved（已成功）和 rejected（已失败）")]),s._v(" "),t("li",[s._v("一旦状态改变，就不会再变，任何时候都可以得到这个结果。Promise 对象的状态改变，只有两种可能：从 pending 变为 resolved 和从 pending 变为 rejected")]),s._v(" "),t("li",[s._v("promise 内部发生错误，不会影响到外部程序的执行。")]),s._v(" "),t("li",[s._v("无法取消 Promise。一旦新建它就会立即执行，无法中途取消。其次，如果不设置回调函数，Promise 内部抛出的错误，不会反应到外部。第三，当处于 pending 状态时，无法得知目前进展到哪一个阶段（刚刚开始还是即将完成）\n用法")])]),s._v(" "),t("h2",{attrs:{id:"indexof"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#indexof"}},[s._v("#")]),s._v(" indexOf")]),s._v(" "),t("blockquote",[t("p",[s._v("indexOf() 方法可返回某个指定的字符串值在字符串中首次出现的位置。"),t("br"),s._v("如果没有找到匹配的字符串则返回 -1。"),t("br"),s._v("indexOf() 方法区分大小写。")])]),s._v(" "),t("h2",{attrs:{id:"git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[s._v("#")]),s._v(" git")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" ."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" 有的不需要file，git "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"first commit"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" origin 仓库地址\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push -u origin master\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])])}),[],!1,null,null,null);e.default=r.exports}}]);